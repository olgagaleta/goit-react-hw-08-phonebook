{"version":3,"file":"static/js/432.c8d3e7b7.chunk.js","mappings":"0PAqFA,UA5EqB,WACnB,IAEMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAWMC,EAASC,EAAAA,KAAaC,MAAM,CAChCR,KAAMO,EAAAA,KAAaE,WACnBP,MAAOK,EAAAA,KAAaL,QAAQO,WAC5BL,SAAUG,EAAAA,KAAaE,aAGzB,OACE,UAAC,IAAD,CACEC,UAAU,OACVC,MAAM,UACNC,GAAI,CACFC,MAAO,OACPC,QAAS,kBACTH,MAAO,eACPI,EAAG,GAELC,SAAUV,EACVW,SA1BiB,SAAAC,GACnBA,EAAMC,iBACNtB,EAASuB,EAAAA,EAAAA,WAA0B,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAClDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAUC,WAYE,SAAC,IAAD,CACEgB,QAAQ,KACRX,UAAU,KACVC,MAAM,UACNC,GAAI,CAAEU,SAAU,GAJlB,SAnCqB,oEA2CrB,SAAC,IAAD,CACEC,GAAG,OACHC,MAAM,kBACNH,QAAQ,WACRI,MAAOzB,EACPY,GAAI,CAAEc,EAAG,GACTC,SAAU,SAAAC,GAAC,OAAI3B,EAAQ2B,EAAEC,OAAOJ,MAArB,KAEb,SAAC,IAAD,CACEF,GAAG,QACHC,MAAM,mBACNH,QAAQ,WACRI,MAAOvB,EACPU,GAAI,CAAEc,EAAG,GACTC,SAAU,SAAAC,GAAC,OAAIzB,EAASyB,EAAEC,OAAOJ,MAAtB,KAEb,SAAC,IAAD,CACEF,GAAG,WACHO,KAAK,WACLN,MAAM,sBACNH,QAAQ,WACRI,MAAOrB,EACPQ,GAAI,CAAEc,EAAG,GACTC,SAAU,SAAAC,GAAC,OAAIvB,EAAYuB,EAAEC,OAAOJ,MAAzB,KAEb,SAAC,IAAD,CAAQJ,QAAQ,YAAYU,KAAK,SAASD,KAAK,SAASlB,GAAI,CAAEc,EAAG,GAAjE,sBAKL,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport authOperations from '../api/authification';\n\nconst RegisterPage = () => {\n  const registrationMessage = `Please, fill out the registration form to use the application.`;\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.addNewUser({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  //Схема валідації\n  const schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      color=\"inherit\"\n      sx={{\n        width: '100%',\n        bgcolor: 'background.main',\n        color: 'text.primary',\n        p: 3,\n      }}\n      validate={schema}\n      onSubmit={handleSubmit}\n    >\n      <Typography\n        variant=\"h6\"\n        component=\"h2\"\n        color=\"inherit\"\n        sx={{ flexGrow: 1 }}\n      >\n        {registrationMessage}\n      </Typography>\n      <TextField\n        id=\"name\"\n        label=\"Enter your name\"\n        variant=\"standard\"\n        value={name}\n        sx={{ m: 2 }}\n        onChange={e => setName(e.target.value)}\n      />\n      <TextField\n        id=\"email\"\n        label=\"Enter your email\"\n        variant=\"standard\"\n        value={email}\n        sx={{ m: 2 }}\n        onChange={e => setEmail(e.target.value)}\n      />\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"Enter your password\"\n        variant=\"standard\"\n        value={password}\n        sx={{ m: 2 }}\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Button variant=\"contained\" size=\"medium\" type=\"submit\" sx={{ m: 2 }}>\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","schema","yup","shape","required","component","color","sx","width","bgcolor","p","validate","onSubmit","event","preventDefault","authOperations","variant","flexGrow","id","label","value","m","onChange","e","target","type","size"],"sourceRoot":""}